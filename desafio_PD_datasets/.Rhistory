rep(names(CO_14)[6],12), rep(names(CO_14)[7],12),rep(names(CO_14)[8],12))
co_14<-c(CO_14[,3],CO_14[,4],CO_14[,5],CO_14[,6],CO_14[,7],CO_14[,8])
Dados_co<-as.data.frame(cbind(co_14,chuva_14,temp_14,
vent_vel_14,vent_dir_14,morf_to,
morf_esp_livre,morf_vert,morf_tipo))
colnames(Dados_co)<-c("co_14","chuva_14","temp_14","vent_vel_14","vent_dir_14",
"morf_to","morf_esp_livre","morf_vert","morf_tipo")
reg<-(lm(formula = log(co_14)~log(chuva_14)+log(temp_14)+log(vent_vel_14)+log(vent_dir_14)+log(morf_to)+
log(morf_vert),data = Dados_co))
jpeg('residual_co_2014.jpg',width = 720)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(reg, main="Análise dos resíduos - CO")
dev.off()
summary(reg)
resumo_co<-summary(reg)
shapiro.test(reg$residuals)
outlierTest(reg)
vif(reg)
durbinWatsonTest(reg)
AIC(reg)
stepAIC(reg,direction = "both")
jpeg('cor_co_2014.jpg',width = 720)
qplot(x=Var1, y=Var2, data=melt(cor(Dados_co, use="p")), fill=value, geom="tile", main = "Matriz de Correlações - CO") +
scale_fill_gradient2(limits=c(-1, 1))
dev.off()
# # Criando o dataset pra regressao PI
Dados_pi<-as.data.frame(cbind(pi_14,chuva_pi_14,temp_pi_14,
vent_pi_vel_14,vent_pi_dir_14,morf_pi_to,
morf_pi_esp_livre,morf_pi_vert,morf_pi_tipo))
colnames(Dados_pi)<-c("pi_14","chuva_pi_14","temp_pi_14","vent_pi_vel_14","vent_pi_dir_14",
"morf_pi_to","morf_pi_esp_livre","morf_pi_vert","morf_pi_tipo")
# reg<-(lm(formula = log(pi_14)~log(chuva_pi_14)+log(temp_pi_14)+log(vent_pi_vel_14)+
#            log(vent_pi_dir_14)+log(morf_pi_to)+
#            log(morf_pi_vert),data = Dados_pi))
reg<-lm(formula = log(pi_14) ~ log(chuva_pi_14) +  log(morf_pi_vert),
data = Dados_pi)
jpeg('residual_pi_2014.jpg',width = 720)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(reg, main="Análise dos resíduos - PI")
dev.off()
resumo_pi <- summary(reg)
shapiro.test(reg$residuals)
outlierTest(reg)
vif(reg)
durbinWatsonTest(reg)
AIC(reg)
stepAIC(reg,direction = "both")
jpeg('cor_pi_2014.jpg',width = 720)
qplot(x=Var1, y=Var2, data=melt(cor(Dados_pi, use="p")), fill=value, geom="tile", main = "Matriz de Correlações - PI") +
scale_fill_gradient2(limits=c(-1, 1))
dev.off()
# cor(Dados_pi)
#
# dados_cor<-cbind(Dados_SO2$so_14,Dados_co)
# cor(dados_cor)
#
# ############# Correlacao 2012 - 2013
#
# SO2<- read.csv(file = paste(diretorio, "SO2_2012e2013.csv", sep = ""), header = TRUE, sep = ";",
# dec = ",")
# head(SO2)
#
# #Criando a variavel ano e mes
# SO2$ano<- substr(x = SO2$Data, start = 7, stop = 10)
# SO2$mes<- substr(x = SO2$Data, start = 4, stop = 5)
#
# SO2<-SO2[-which(SO2$ano=="2012"),]
# SO2 <-aggregate(SO2, by=list(ano = SO2$ano, mes = SO2$mes),
# FUN=mean, na.rm=TRUE)
#
# SO2<-SO2[,-c(3,15,16)]
# head(SO2)
# dim(SO2)
#
# so2_13<-c(SO2[,3],SO2[,4],SO2[,5],SO2[,6],SO2[,7],SO2[,8],SO2[,9],SO2[,10],SO2[,11],SO2[,12],SO2[,13])
#
#
# co<- read.csv(file = paste(diretorio, "co_2013.csv", sep = ""), header = TRUE, sep = ";",
#                dec = ",")
#
#
# #Criando a variavel ano e mes
# co$ano<- substr(x = co$Data, start = 7, stop = 10)
# co$mes<- substr(x = co$Data, start = 4, stop = 5)
#
# #SO2<-SO2[-which(SO2$ano=="2012"),]
# co <-aggregate(co, by=list(ano = co$ano, mes = co$mes),
#                 FUN=mean, na.rm=TRUE)
#
# co<-co[,-c(3,17,18)]
# head(co)
# dim(co)
#
# co_13<-c(co[,3],co[,4],co[,5],co[,6],co[,7],co[,8],co[,9],co[,10],co[,11],co[,12],co[,13],co[,14],co[,15])
#
#
#
#
#
# PI_1213<- read.csv(file = paste(diretorio, "PI_2012e2013.csv", sep = ""), header = TRUE, sep = ";",
#                dec = ",")
# head(PI_1213)
#
# #Criando a variavel ano e mes
# PI_1213$ano<- substr(x = PI_1213$Data, start = 7, stop = 10)
# PI_1213$mes<- substr(x = PI_1213$Data, start = 4, stop = 5)
#
# PI<-PI_1213[-which(PI_1213$ano=="2012"),]
# PI <-aggregate(PI, by=list(ano = PI$ano, mes = PI$mes),
#                 FUN=mean, na.rm=TRUE)
#
# PI<-PI[,-c(3,15,16)]
# head(PI)
# dim(PI)
#
# PI_13<-c(PI[,3],PI[,4],PI[,5],PI[,6],PI[,7],PI[,8],PI[,9],PI[,10],PI[,11],PI[,12],PI[,13])
save()
save("analise_2014.Rdata")
save.image("~/Dropbox/Juliana_Maia/tabelafigura/analise_2014.RData")
setwd("~/Documentos/desafio_PD_datasets/")
require(jsonlite)
require(plyr)
require(rpart)
library(rattle)					# Fancy tree plot
library(rpart.plot)				# Enhanced tree plots
library(RColorBrewer)
options(digits = 4)
############# Lendo os arquivos ##################
frie_conn <- fromJSON("friend_connection.json")
stu_agg <- fromJSON("student_aggregate.json")
stu_down <- fromJSON("student_download.json")
frie_resq <- fromJSON("friend_request.json")
stu_ans <- fromJSON("student_answer.json")
stu_com <- fromJSON("student_comment.json")
stu_eval <- fromJSON("student_evaluation.json")
stu_upl <- fromJSON("student_file_upload.json")
stu_log <- fromJSON("student_loginlog_aggreagate.json")
stu_ques <- fromJSON("student_question.json")
############# gerando DF from list
frie_conn <- as.data.frame(lapply(frie_conn$friend_connection,cbind))
stu_down <- as.data.frame(lapply(stu_down$student_download,cbind))
frie_resq <- as.data.frame(lapply(frie_resq$friendrequest,cbind))
stu_ans <- as.data.frame(lapply(stu_ans$student_answer,cbind))
stu_com <- as.data.frame(lapply(stu_com$student_comment,cbind))
stu_eval<-as.data.frame(lapply(stu_eval$student_evaluation,cbind))
stu_upl <- as.data.frame(lapply(stu_upl$student_file_upload,cbind))
stu_log <- as.data.frame(lapply(stu_log$student_loginlog_aggreagate,cbind))
stu_ques <- as.data.frame(lapply(stu_ques$student_question,cbind))
########### Estatística descritiva dados agregados
stu_agg$ESTADO<-toupper(stu_agg$stateName)
regiao<-read.csv(file = "estado_regiao_brasil.csv",sep=";")
stu_agg<-merge(x = stu_agg, y = regiao, by="ESTADO",all.x = TRUE)
stu_agg<-stu_agg[,-1]
estados <- count(stu_agg,"stateName")
estados$rel <- prop.table(estados$freq)
estados <- estados[order(estados$rel,decreasing = TRUE),]
barplot(estados$rel,names.arg = 1:length(estados$rel),ylim = c(0,0.3),main="% de usuários por estado")
head(estados,10)
universidade <- count(stu_agg,"UniversityName")
universidade$rel <- prop.table(universidade$freq)
universidade <- universidade[order(universidade$rel,decreasing = TRUE),]
barplot(universidade$rel,names.arg = 1:length(universidade$rel),ylim = c(0,0.3))
head(universidade,10)
########### Analise no tempo
tempo_upload <- as.Date(stu_upl$LastLoginDate)-as.Date(stu_upl$RegisteredDate)
tempo_down <- as.Date(stu_down$LastLoginDate)-as.Date(stu_down$RegisteredDate)
tempo_com <- as.Date(stu_com$LastLoginDate)-as.Date(stu_com$RegisteredDate)
tempo_ans <- as.Date(stu_ans$LastLoginDate)-as.Date(stu_ans$RegisteredDate)
tempo_ques <- as.Date(stu_ques$LastLoginDate)-as.Date(stu_ques$RegisteredDate)
tempo_eval <- as.Date(stu_eval$LastLoginDate)-as.Date(stu_eval$RegisteredDate)
mean(tempo_upload)
mean(tempo_down)
mean(tempo_com)
mean(tempo_ans)
mean(tempo_ques)
mean(tempo_eval)
summary(as.numeric(tempo_down))
par(mfrow=(c(2,3)))
hist(as.numeric(tempo_upload),main = "Numero de cliente que fizeram uploads por \n tempo de registro",
xlab = "Tempo de registro",col = "gray")
hist(as.numeric(tempo_down),main = "Numero de cliente que fizeram downloads por \n  tempo de registro",
xlab = "Tempo de registro",col = "gray")
hist(as.numeric(tempo_com),main = "Numero de cliente que fizeram comentários por \n tempo de registro",
xlab = "Tempo de registro",col = "gray")
hist(as.numeric(tempo_ans),main = "Numero de cliente que responderam por \n tempo de registro",
xlab = "Tempo de registro",col = "gray")
hist(as.numeric(tempo_ques),main = "Numero de cliente que questionaram por \n tempo de registro",
xlab = "Tempo de registro",col = "gray")
hist(as.numeric(tempo_eval),main = "Numero de cliente que curtiram por \n tempo de registro",
xlab = "Tempo de registro",col = "gray")
############ Frequencia de ocorrencia
qtd_down<-count(stu_down,"Id")
names(qtd_down)[2]<-"qtd_down"
qtd_ans<- count(stu_ans,"Id")
names(qtd_ans)[2]<-"qtd_ans"
qtd_com<- count(stu_com,"Id")
names(qtd_com)[2]<-"qtd_com"
qtd_eval<- count(stu_eval,"Id")
names(qtd_eval)[2]<-"qtd_eval"
qtd_upl<- count(stu_upl,"Id")
names(qtd_upl)[2]<-"qtd_upl"
qtd_log<- count(stu_log,"Id")
names(qtd_log)[2]<-"qtd_log"
qtd_ques<- count(stu_ques,"Id")
names(qtd_ques)[2]<-"qtd_ques"
############ Add info ao banco agregado
stu_agg<-merge(x = stu_agg,y = qtd_down,by = "Id",all.x = TRUE)
stu_agg<-merge(x = stu_agg,y = qtd_ans,by = "Id",all.x = TRUE)
stu_agg<-merge(x = stu_agg,y = qtd_com,by = "Id",all.x = TRUE)
stu_agg<-merge(x = stu_agg,y = qtd_eval,by = "Id",all.x = TRUE)
stu_agg<-merge(x = stu_agg,y = qtd_upl,by = "Id",all.x = TRUE)
stu_agg<-merge(x = stu_agg,y = qtd_log,by = "Id",all.x = TRUE)
stu_agg<-merge(x = stu_agg,y = qtd_ques,by = "Id",all.x = TRUE)
############# Criando tabela por sexo, estado, regiao, universidade
info_agg<-stu_agg[,c(3,5,6,7,8)]
cont_agg<-stu_agg[,c(20,21,22,23,24,25,26)]
cont_agg<-apply(cont_agg,2,as.numeric)
Contagem_agg<-cbind(info_agg,cont_agg)
por_estado<-aggregate(cont_agg,by = list(info_agg$stateName),FUN = mean,na.rm=TRUE)
por_universidade<-aggregate(cont_agg,by = list(info_agg$UniversityName),FUN = mean,na.rm=TRUE)
por_sexo<-aggregate(cont_agg,by = list(info_agg$Gender),FUN = mean,na.rm=TRUE)
teste<-stu_agg[,c(6,7,16,20,21)]
form <- qtd_down ~ .
fit <- rpart(qtd_down ~ ., data=teste)#, control = rpart.control(cp = 0.05, minsplit=5))
fancyRpartPlot(fit)
fit
d<-dist(teste)
d<-dist(na.omit(teste))
head(d)
class(teste)
na.omit(teste)
dist(na.omit(teste))
class(d)
cls<-hclust(d)
cls$merge
cls$dist.method
cls$height
cls$order
cls$labels
plo(cls)
plot(cls)
par(mfrow=c(1,1))
plot(cls)
teste<-stu_agg[,c(6,16,20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
teste<-stu_agg[,c(6,16,20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
teste<-stu_agg[,c(6,20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
teste<-stu_agg[,c(20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
cls<-hclust(d)
teste<-stu_agg[,c(6,7,16,20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
groups <- cutree(fit, k=5)
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
teste<-stu_agg[,c(20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
teste<-stu_agg[,c(20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
teste<-stu_agg[,c(6,7,16,20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
teste<-stu_agg[,c(20,21)]
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
library(pvclust)
install.packages("pvclust")
library(pvclust)
fit <- pvclust(teste, method.hclust="ward",
method.dist="euclidean")
fit <- pvclust(na.omit(teste), method.hclust="ward",
method.dist="euclidean")
plot(fit) # dendogram with p values
# add rectangles around groups highly supported by the data
pvrect(fit, alpha=.95)
teste
replace(x = teste$qtd_down,list = which(teste$qtd_down==NA),values = 0)
replace(x = teste$qtd_down,list = which(teste$qtd_down=='NA'),values = 0)
which(teste$qtd_down=='NA')
which(teste$qtd_down==NA)
teste$qtd_down
teste$qtd_down[1]==NA
teste[is.na(teste)] <- 0
teste<-stu_agg[,c(20,21)]
teste[is.na(teste)] <- 0
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
fit <- pvclust(na.omit(teste), method.hclust="ward",
method.dist="euclidean")
teste
teste<-stu_agg[,c(20,21,22,23,24,25,26)]
teste[is.na(teste)] <- 0
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
names(stu_agg)
cls$merge
cls$order
groups <- cutree(cls, k=5)
rect.hclust(cls, k=5, border="red")
groups <- cutree(cls, k=3)
rect.hclust(cls, k=3, border="red")
teste<-stu_agg[,c(20,21,22,23,24,25,26)]
teste[is.na(teste)] <- 0
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=3)
rect.hclust(cls, k=3, border="red")
teste<-stu_agg[,c(6,20,21,22,23,24,25,26)]
teste[is.na(teste)] <- 0
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=3)
rect.hclust(cls, k=3, border="red")
wss <- (nrow(teste)-1)*sum(apply(teste,2,var))
wss
teste<-stu_agg[,c(20,21,22,23,24,25,26)]
teste[is.na(teste)] <- 0
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=3)
rect.hclust(cls, k=3, border="red")
# Determine number of clusters
wss <- (nrow(teste)-1)*sum(apply(teste,2,var))
teste<-stu_agg[,c(21,22,23,24,25,26)]
teste[is.na(teste)] <- 0
d<-dist(na.omit(teste))
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=3)
rect.hclust(cls, k=3, border="red")
# Determine number of clusters
wss <- (nrow(teste)-1)*sum(apply(teste,2,var))
stu_agg$isSuldeste<-ifelse(stu_agg$REGIAO == "SULDESTE", 1 ,0)
stu_agg$isSul<-ifelse(stu_agg$REGIAO == "SUL", 1 ,0)
stu_agg$isNorte<-ifelse(stu_agg$REGIAO == "NORTE", 1 ,0)
stu_agg$isNordeste<-ifelse(stu_agg$REGIAO == "NORDESTE", 1 ,0)
stu_agg$isCentro<-ifelse(stu_agg$REGIAO == "CENTRO-OESTE", 1 ,0)
names(x = stu_agg)
maior_produtor<-stu_agg[,-1:20]
maior_produtor<-stu_agg[,-c(1:20)]
View(maior_produtor)
maior_produtor[is.na(maior_produtor)] <- 0
d<-dist(na.omit(maior_produtor))
cls<-hclust(d)
plot(cls)
maior_produtor[77,]
groups <- cutree(cls, k=4)
rect.hclust(cls, k=4, border="red")
wss <- (nrow(maior_produtor)-1)*sum(apply(maior_produtor,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(maior_produtor,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
cls<-hclust(d)
plot(cls)
groups <- cutree(cls, k=12)
rect.hclust(cls, k=12, border="red")
mean(qtd_down)
mean(qtd_down,na.rm = T)
mean(qtd_down,na.rm = TRUE)
qtd_down
mean(maior_produtor$qtd_down,na.rm = TRUE)
wss <- (nrow(maior_produtor)-1)*sum(apply(maior_produtor,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(maior_produtor,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
fit <- kmeans(maior_produtor, 9) # 5 cluster solution
# get cluster means
aggregate(maior_produtor,by=list(fit$cluster),FUN=mean)
maior_produtor <- data.frame(maior_produtor, fit$cluster)
View(maior_produtor)
sum(maior_produtor$isSuldeste)
sum(maior_produtor$isSuldeste)
sum(maior_produtor$isNordeste)
sum(maior_produtor$isNorte)
sum(maior_produtor$isCentro)
sum(maior_produtor$isSul)
unique(stu_agg$REGIAO)
stu_agg$isSuldeste<-ifelse(stu_agg$REGIAO == "SUDESTE", 1 ,0)
stu_agg$isSul<-ifelse(stu_agg$REGIAO == "SUL", 1 ,0)
stu_agg$isNorte<-ifelse(stu_agg$REGIAO == "NORTE", 1 ,0)
stu_agg$isNordeste<-ifelse(stu_agg$REGIAO == "NORDESTE", 1 ,0)
stu_agg$isCentro<-ifelse(stu_agg$REGIAO == "CENTRO-OESTE", 1 ,0)
maior_produtor<-stu_agg[,-c(1:20)]
maior_produtor[is.na(maior_produtor)] <- 0
wss <- (nrow(maior_produtor)-1)*sum(apply(maior_produtor,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(maior_produtor,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Número de Clusters",
ylab="Soma dos quadrados entre grupos")
fit <- kmeans(maior_produtor, 8) # 8 cluster
aggregate(maior_produtor,by=list(fit$cluster),FUN=mean)
# add cluster ao dado
maior_produtor <- data.frame(maior_produtor, fit$cluster)
X <- model.matrix(~0+Diet, data=subset(ChickWeight, Time==20))
head(X)
unique(X)
X
X <- model.matrix(~0+Diet, data=subset(ChickWeight, Time==3))
head(X)
unique(X)
X
X <- model.matrix(~0+Diet, data=subset(ChickWeight, Time==30))
head(X)
unique(X)
X
X <- model.matrix(~0+Diet, data=subset(ChickWeight, Time==20))
head(X)
unique(X)
Diet
ChickWeight
head(ChickWeight)
X <- model.matrix(~0+Diet, data=subset(ChickWeight, Time==10))
head(X)
unique(X)
X <- model.matrix(~0+Diet, data=ChickWeight)
head(X)
unique(X)
X
str(ChickWeight$Diet)
head(X)
mean(tempo_upload)
mean(tempo_down)
mean(tempo_com)
mean(tempo_ans)
mean(tempo_ques)
mean(tempo_eval)
aggregate(maior_produtor,by=list(fit$cluster),FUN=mean)
names(stu_agg)
info_agg<-stu_agg[,c(3,5,6,7,8,20)]
cont_agg<-stu_agg[,c(21,22,23,24,25,26)]
cont_agg<-apply(cont_agg,2,as.numeric)
Contagem_agg<-cbind(info_agg,cont_agg)
por_estado<-aggregate(cont_agg,by = list(info_agg$stateName),FUN = mean,na.rm=TRUE)
por_universidade<-aggregate(cont_agg,by = list(info_agg$UniversityName),FUN = mean,na.rm=TRUE)
por_sexo<-aggregate(cont_agg,by = list(info_agg$Gender),FUN = mean,na.rm=TRUE)
por_Regiao<-aggregate(cont_agg,by = list(info_agg$REGIAO),FUN = mean,na.rm=TRUE)
por_Regiao
cont_agg[is.na(cont_agg)] <- 0
por_estado<-aggregate(cont_agg,by = list(info_agg$stateName),FUN = mean,na.rm=TRUE)
por_universidade<-aggregate(cont_agg,by = list(info_agg$UniversityName),FUN = mean,na.rm=TRUE)
por_sexo<-aggregate(cont_agg,by = list(info_agg$Gender),FUN = mean,na.rm=TRUE)
por_Regiao<-aggregate(cont_agg,by = list(info_agg$REGIAO),FUN = mean,na.rm=TRUE)
por_Regiao
head(stu_agg)
sum(stu_agg$isNorte)
View(stu_agg)
length(unique(stu_agg$CourseName))
length(unique(stu_agg$stateName))
length(unique(stu_agg$IsMobileRegister))
sum(stu_agg$IsMobileRegister)
sum(as.numeric(stu_agg$IsMobileRegister))
sum(as.numeric(stu_agg$IsMobileRegister),na.rm = TRUE)
as.numeric(stu_agg$IsMobileRegister)
stu_agg$IsMobileRegister[which(stu$IsMobileRegister == true)]
stu_agg$IsMobileRegister[which(stu_agg$IsMobileRegister == true)]
stu_agg$IsMobileRegister[which(stu_agg$IsMobileRegister == 'true')]
stu_agg[is.na(stu_agg)] <- 0
info_agg<-stu_agg[,c(3,5,6,7,8,20)]
cont_agg<-stu_agg[,c(21,22,23,24,25,26)]
cont_agg<-apply(cont_agg,2,as.numeric)
Contagem_agg<-cbind(info_agg,cont_agg)
por_estado<-aggregate(cont_agg,by = list(info_agg$stateName),FUN = mean,na.rm=TRUE)
por_universidade<-aggregate(cont_agg,by = list(info_agg$UniversityName),FUN = mean,na.rm=TRUE)
por_sexo<-aggregate(cont_agg,by = list(info_agg$Gender),FUN = mean,na.rm=TRUE)
por_Regiao<-aggregate(cont_agg,by = list(info_agg$REGIAO),FUN = mean,na.rm=TRUE)
View(stu_agg)
summary(stu_agg)
summary(stu_ques)
stu_agg$Id %in% stu_ques$QuestionID
stu_agg$Id %in% stu_ques$Id
head(stu_ques$UploadCount)
universidade <- count(stu_agg,"UniversityName")
universidade$rel <- prop.table(universidade$freq)
universidade <- universidade[order(universidade$rel,decreasing = TRUE),]
barplot(universidade$rel,names.arg = 1:length(universidade$rel),ylim = c(0,0.3))
estados <- count(stu_agg,"stateName")
estados$rel <- prop.table(estados$freq)
estados <- estados[order(estados$rel,decreasing = TRUE),]
barplot(estados$rel,names.arg = 1:length(estados$rel),ylim = c(0,0.3),main="% de usuários por estado")
head(estados,10)
